# Cloud Build configuration for database migrations deployment
# This pipeline runs Liquibase migrations against Cloud SQL PostgreSQL instance

steps:
  # Step 1: Build Liquibase Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'build-liquibase-image'
    args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/mkrew-liquibase:$BUILD_ID'
      - '-t'
      - 'gcr.io/$PROJECT_ID/mkrew-liquibase:latest'
      - '-f'
      - 'db/Dockerfile'
      - 'db/'

  # Step 2: Push Liquibase image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-liquibase-image'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/mkrew-liquibase:$BUILD_ID'
    waitFor: ['build-liquibase-image']

  # Step 3: Run Liquibase migrations via Cloud SQL Proxy
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'run-liquibase-migrations'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Download Cloud SQL Proxy
        wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
        chmod +x cloud_sql_proxy

        # Start Cloud SQL Proxy in background
        ./cloud_sql_proxy -instances=${_CLOUD_SQL_INSTANCE}=tcp:5432 &
        PROXY_PID=$!

        # Wait for proxy to be ready
        sleep 5

        # Run Liquibase update
        docker run --rm \
          --network=cloudbuild \
          -v $(pwd)/db/changelog:/liquibase/changelog \
          gcr.io/$PROJECT_ID/mkrew-liquibase:$BUILD_ID \
          --url="jdbc:postgresql://host.docker.internal:5432/${_DB_NAME}" \
          --username="${_DB_USER}" \
          --password="${_DB_PASSWORD}" \
          --changelog-file=changelog/db.changelog-master.yaml \
          update

        # Stop Cloud SQL Proxy
        kill $PROXY_PID
    waitFor: ['push-liquibase-image']
    secretEnv: ['DB_PASSWORD']

  # Step 4: Tag latest image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'push-latest-tag'
    args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/mkrew-liquibase:latest'
    waitFor: ['run-liquibase-migrations']

# Store images in Container Registry
images:
  - 'gcr.io/$PROJECT_ID/mkrew-liquibase:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/mkrew-liquibase:latest'

# Secrets from Secret Manager
availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/mkrew-db-password/versions/latest
      env: 'DB_PASSWORD'

# Substitution variables (provided at trigger time or via command line)
substitutions:
  _CLOUD_SQL_INSTANCE: 'project-id:region:instance-name'  # Format: project-id:region:instance-name
  _DB_NAME: 'mkrew'
  _DB_USER: 'mkrew'
  # _DB_PASSWORD is loaded from Secret Manager

options:
  # Enable Cloud SQL Proxy
  machineType: 'E2_HIGHCPU_8'
  logging: CLOUD_LOGGING_ONLY

timeout: '1200s'  # 20 minutes
