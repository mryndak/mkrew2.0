name: Deploy Frontend to GKE

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-deploy-gke.yml'
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: mkrew-cluster
  GKE_REGION: europe-central2  # Warszawa
  IMAGE_NAME: mkrew-frontend
  DEPLOYMENT_NAME: mkrew-frontend

jobs:
  build-and-deploy:
    name: Build and Deploy Frontend to GKE
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker gcr.io

    - name: Build Docker image
      working-directory: ./frontend
      run: |
        docker build \
          --tag "gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA" \
          --tag "gcr.io/$PROJECT_ID/$IMAGE_NAME:latest" \
          .

    - name: Push Docker image to GCR
      run: |
        docker push "gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA"
        docker push "gcr.io/$PROJECT_ID/$IMAGE_NAME:latest"

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER \
          --region $GKE_REGION \
          --project $PROJECT_ID

    - name: Replace PROJECT_ID in manifests
      working-directory: ./frontend/k8s
      run: |
        sed -i "s/PROJECT_ID/$PROJECT_ID/g" deployment.yaml

    - name: Deploy to GKE
      working-directory: ./frontend/k8s
      run: |
        kubectl apply -f configmap.yaml
        kubectl apply -f deployment.yaml
        kubectl apply -f hpa.yaml
        kubectl apply -f ingress.yaml

    - name: Update deployment with new image
      run: |
        kubectl set image deployment/$DEPLOYMENT_NAME \
          frontend=gcr.io/$PROJECT_ID/$IMAGE_NAME:$GITHUB_SHA

    - name: Wait for rollout to complete
      run: |
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

    - name: Verify deployment
      run: |
        kubectl get pods -l app=$DEPLOYMENT_NAME
        kubectl get ingress mkrew-frontend-ingress
